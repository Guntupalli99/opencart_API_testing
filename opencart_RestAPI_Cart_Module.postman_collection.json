{
	"info": {
		"_postman_id": "27cbe7e6-7b61-4a7e-8435-8be40dad2b7b",
		"name": "opencart_RestAPI_Cart_Module",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20881348",
		"_collection_link": "https://lively-astronaut-327212.postman.co/workspace/myworkspace~c3c15ccd-b202-46da-b150-b1125b809f5b/collection/20881348-27cbe7e6-7b61-4a7e-8435-8be40dad2b7b?action=share&source=collection_link&creator=20881348"
	},
	"item": [
		{
			"name": "Create Session/Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"staus code is 200\",()=>{\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"// capturing response\r",
							"var jsonData=pm.response.json();\r",
							"\r",
							"// validating JSON response\r",
							"pm.test(\"checking success message in response\",()=>{\r",
							"    pm.expect(jsonData.success).to.eql(\"Success: API session successfully started!\");\r",
							"});\r",
							"\r",
							"// creating collection variable to store api_token\r",
							"pm.collectionVariables.set(\"api_token_val\",jsonData.api_token)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "cart",
							"description": "Get it from opencart admin",
							"type": "text"
						},
						{
							"key": "key",
							"value": "lDWS2jZ7OW2hM5uHyLfhrlYqW1NJ5jPgk0sOmZRkzdKcR85SqqfQJNigrdehRRmFUXg06uZuMId3SFcCMhpMCHtF34j4bQUWqe77jjwi0fzuumFM6TmDGTNHZsKeOOO68eGRsCRGrlNVkGEs6TxfdG1LnDbNZzzbuR1UgtQHdbTMKWNv5PHlUnCncCxOtYQMB4ZTpzXi8YC8WnDS44jJIEDT6Cvmo1GATWLV2RPl6OA86EdNlHQ6QoH6jMm5xLpO",
							"description": "Get it from opencart admin",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/login",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"login"
					],
					"query": [
						{
							"key": "username",
							"value": "demo",
							"disabled": true
						},
						{
							"key": "key",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Add product to cart",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"product_id\",\"40\");\r",
							"pm.collectionVariables.set(\"quantuty\",\"22\")"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"pm.test(\"staus code is 200\",()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"// capturing response\r",
							"var jsonData=pm.response.json();\r",
							"\r",
							"// validating JSON response\r",
							"pm.test(\"checking success message in response\",()=>{\r",
							"    pm.expect(jsonData.success).to.eql(\"Success: You have modified your shopping cart!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "product_id",
							"value": "{{product_id}}",
							"type": "text"
						},
						{
							"key": "quantuty",
							"value": "{{quantuty}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/cart/add",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"cart",
						"add"
					]
				}
			},
			"response": []
		},
		{
			"name": "Cart content",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"staus code is 200\",()=>{\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"var jsonData=JSON.parse(responseBody);\r",
							"pm.collectionVariables.set(\"cart_id_key\",jsonData.products[0].cart_id)"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "product_id",
							"value": "{{product_id}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/cart/products",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"cart",
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit product quantity in cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"staus code is 200\",()=>{\r",
							"    pm.response.to.have.status(200)\r",
							"})\r",
							"\r",
							"\r",
							"// capturing response\r",
							"var jsonData=pm.response.json(responseBody);\r",
							"\r",
							"// validating JSON response\r",
							"pm.test(\"checking success message in response\",()=>{\r",
							"    pm.expect(jsonData.success).to.eql(\"Success: You have modified your shopping cart!\");\r",
							"});\r",
							"\r",
							"/**  actually edit the value we use put or patch method.in this case we use post method,\r",
							"because it depends on how desgin apis (or) what are the methods we use design for apis  \r",
							" */"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "key",
							"value": "{{cart_id_key}}",
							"type": "text"
						},
						{
							"key": "quantity",
							"value": "9",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/cart/edit",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"cart",
						"edit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove from cart",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check status code\",()=>{\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							"\r",
							"// validate json response\r",
							"pm.test(\"checking success msg in response\",()=>{\r",
							"    var jsonData=pm.response.json();\r",
							"    pm.expect(jsonData.success).to.eql( \"Success: You have modified your shopping cart!\");\r",
							"\r",
							"})\r",
							"\r",
							"// if you after completing all actions,you dont want to varbles, do unset variables(nothing but delete variables)\r",
							"\r",
							"pm.collectionVariables.unset(\"api_token_val\");\r",
							"pm.collectionVariables.unset(\"product_id\");\r",
							"pm.collectionVariables.unset(\"quantuty\");\r",
							"pm.collectionVariables.unset(\"cart_id_key\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "apikey",
					"apikey": [
						{
							"key": "in",
							"value": "query",
							"type": "string"
						},
						{
							"key": "key",
							"value": "api_token",
							"type": "string"
						},
						{
							"key": "value",
							"value": "{{api_token_val}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "key",
							"value": "{{cart_id_key}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseURL}}api/cart/remove",
					"host": [
						"{{baseURL}}api"
					],
					"path": [
						"cart",
						"remove"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// baseURL=http://myopencart.example.com/index.php?route=",
					"",
					"// some times you can created at collection level variables.in case their is any conflicts(same id one more is their) then you can create those variables at environment level "
				]
			}
		}
	],
	"variable": [
		{
			"key": "ip",
			"value": "192.168.0.133",
			"type": "string"
		},
		{
			"key": "baseURL",
			"value": "http://{{ip}}/opencart/upload/index.php?route=",
			"type": "string"
		}
	]
}